{"version":3,"sources":["store.js","Styles.js","App.js","index.js"],"names":["initialStoreState","todos","isMaxNumberOfTasks","dataStatus","isDataLoading","isDataLoaded","isDataError","addTaskActionCreator","tasks","type","payload","middlewareEnhancer","applyMiddleware","store","createStore","state","action","length","MAX_NUMBER_OF_TASKS","splice","completed","composeWithDevTools","GlobalStyles","createGlobalStyle","Container","styled","div","Title","h1","Info","p","InfoMax","Input","input","InputSubmit","Form","form","List","ul","ListElement","li","ListElementText","Button","button","DoneButton","DeleteButton","App","useState","inputValue","setInputValue","taskList","useSelector","isMax","dispatch","useDispatch","useEffect","fetch","then","result","json","filter","_","index","map","task","id","title","catch","handleSubmit","event","preventDefault","alert","onSubmit","value","disabled","onChange","target","taskData","key","onClick","changeTaskStatusDone","handleStatusDone","deleteTaskActionCreator","handleDelete","ReactDOM","render","document","getElementById"],"mappings":"8NAYMA,EAAoB,CACxBC,MAAO,GACPC,oBAAoB,EACpBC,WAAY,CACVC,eAAe,EACfC,cAAc,EACdC,aAAa,IA4EJC,EAAuB,SAAAC,GAClC,MAAO,CACLC,KAxFc,YAyFdC,QAASF,IAkBPG,EAAqBC,4BAEdC,EAAQC,uBA/FE,WAAwC,IAAvCC,EAAsC,uDAA9Bf,EAAmBgB,EAAW,uCAC5D,OAAQA,EAAOP,MACb,IAnBuB,qBAoBrB,OAAO,eACFM,EADL,CAEEZ,WAAY,CACVE,cAAc,EACdD,eAAe,EACfE,aAAa,KAGnB,IA3BqB,mBA4BnB,OAAO,eACFS,EADL,CAEEZ,WAAY,CACVE,cAAc,EACdD,eAAe,EACfE,aAAa,KAGnB,IAnCuB,qBAoCrB,OAAO,eACFS,EADL,CAEEZ,WAAY,CACVE,cAAc,EACdD,eAAe,EACfE,aAAa,KAGnB,IA3Cc,YA4CZ,OAAO,eACFS,EADL,CAEEb,mBACEa,EAAMd,MAAMgB,OAASD,EAAON,QAAQO,QAAUC,EAChDjB,MAAM,GAAD,mBAAMe,EAAON,SAAb,YAAyBK,EAAMd,UAExC,IAjDgB,cAkDd,OAAO,eACFc,EADL,GAEKA,EAAMd,MAAMkB,OAAOH,EAAON,QAAS,GAFxC,CAGET,MAAM,YAAKc,EAAMd,OACjBC,oBAAoB,IAExB,IAvD6B,2BAwD3B,OAAO,eACFa,EADL,GAEMA,EAAMd,MAAMe,EAAON,SAASU,WAAY,EAF9C,CAGEnB,MAAM,YAAKc,EAAMd,SAErB,QACE,OAAOc,KA+CXf,EACAqB,8BAAoBV,I,ojFCrHf,IAAMW,EAAeC,YAAH,KAMZC,EAAYC,IAAOC,IAAV,KAMTC,EAAQF,IAAOG,GAAV,KAOLC,EAAOJ,IAAOK,EAAV,KAQJC,EAAUN,YAAOI,EAAPJ,CAAH,KAKPO,EAAQP,IAAOQ,MAAV,KAcLC,EAAcT,YAAOO,EAAPP,CAAH,KAUXU,EAAOV,IAAOW,KAAV,KAMJC,EAAOZ,IAAOa,GAAV,KAMJC,EAAcd,IAAOe,GAAV,KAOXC,EAAkBhB,IAAOK,EAAV,KAcfY,EAASjB,IAAOkB,OAAV,KAUNC,EAAanB,YAAOiB,EAAPjB,CAAH,KASVoB,EAAepB,YAAOiB,EAAPjB,CAAH,KC0BVqB,MAhHf,WAAgB,IAAD,EACuBC,mBAAS,IADhC,mBACNC,EADM,KACMC,EADN,KAEPC,EAAWC,aAAY,SAAApC,GAAK,OAAIA,EAAMd,SACtCmD,EAAQD,aAAY,SAAApC,GAAK,OAAIA,KAC7BZ,EAAagD,aAAY,SAAApC,GAAK,OAAIA,EAAMZ,cAExCkD,EAAWC,cAEjBC,qBAAU,WACHpD,EAAWE,cAAiBF,EAAWC,gBAC1CiD,EFgDG,CACL5C,KA9EqB,qBE8BnB+C,MAAM,8CACHC,MAAK,SAAAC,GAAM,OAAIA,EAAOC,UACtBF,MAAK,SAAAC,GACJL,EAAS9C,EAAqCmD,EAvBnDE,QAAO,SAACC,EAAGC,GAAJ,OAAcA,GAAS5C,EAAsB,KACpD6C,KAAI,SAAAC,GACH,MAAO,CACLC,GAAID,EAAKC,GACTC,MAAOF,EAAKE,MACZ9C,UAAW4C,EAAK5C,gBAmBdiC,EFqCD,CACL5C,KAzEuB,0BEqClB0D,OAAM,WACLd,EF8CD,CACL5C,KAnFuB,6BEuCtB,CAAC4C,EAAUlD,EAAWE,eAEzB,IAAM+D,EAAe,SAAAC,GACnBA,EAAMC,iBACFlB,EAAMlD,oBACRqE,MACE,gFAGe,KAAfvB,EACFuB,MAAM,wBAENlB,EAAS9C,EAAqB,CAAC,CAAE2D,MAAOlB,EAAY5B,WAAW,MAC/D6B,EAAc,MAoElB,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,kBA1DEG,EAAMlD,mBAEN,oCACE,kBAAC,EAAD,qFAIA,kBAAC,EAAD,CAAasE,SAAUJ,GACrB,kBAAC,EAAD,CACE3D,KAAK,OACLgE,MAAOzB,EACP0B,SAAS,WACTC,SAAU,SAAAN,GAAK,OAAIpB,EAAcoB,EAAMO,OAAOH,YAOtD,oCACE,kBAAC,EAAD,4CACA,kBAAC,EAAD,CAAaD,SAAUJ,GACrB,kBAAC,EAAD,CACE3D,KAAK,OACLgE,MAAOzB,EACP2B,SAAU,SAAAN,GAAK,OAAIpB,EAAcoB,EAAMO,OAAOH,UAEhD,kBAAC,EAAD,CAAoBhE,KAAK,SAASgE,MAAM,eAiC5C,kBAAC,EAAD,KA1BEtE,EAAWG,YACN,+DACEH,EAAWC,cACb,0CAEF8C,EAASa,KAAI,SAACc,EAAUf,GAAX,OAClB,kBAAC,EAAD,CAAoBgB,IAAKhB,GACvB,kBAAC,EAAD,KAAyBe,EAASX,QACV,IAAvBW,EAASzD,UACR,kBAAC,EAAD,CAAmB2D,QAAS,kBAhDX,SAAAjB,GACvBT,EFwCgC,SAAAS,GAClC,MAAO,CACLrD,KApG6B,2BAqG7BC,QAASoD,GE3CAkB,CAAqBlB,IA+CUmB,CAAiBnB,KAAnD,QAIA,kBAAC,EAAD,CAAqBiB,QAAS,kBAxDjB,SAAAjB,GACnBT,EFqCmC,SAAAS,GACrC,MAAO,CACLrD,KA9FgB,cA+FhBC,QAASoD,GExCAoB,CAAwBpB,IAuDSqB,CAAarB,KAAjD,sBCvHV,oDAKO,IAAM5C,EAAsB,GAEnCkE,IAASC,OACP,kBAAC,IAAD,CAAUxE,MAAOA,GACf,kBAAC,EAAD,OAEFyE,SAASC,eAAe,W","file":"static/js/main.66fa27c4.chunk.js","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nimport { MAX_NUMBER_OF_TASKS } from \"./index\";\r\n\r\nconst FETCH_DATA_SUCCESS = \"FETCH_DATA_SUCCESS\";\r\nconst FETCH_DATA_START = \"FETCH_DATA_START\";\r\nconst FETCH_DATA_FAILURE = \"FETCH_DATA_FAILURE\";\r\nconst ADD_TASKS = \"ADD_TASKS\";\r\nconst DELETE_TASK = \"DELETE_TASK\";\r\nconst CHANGE_TASK_TO_COMPLETED = \"CHANGE_TASK_TO_COMPLETED\";\r\n\r\nconst initialStoreState = {\r\n  todos: [],\r\n  isMaxNumberOfTasks: false,\r\n  dataStatus: {\r\n    isDataLoading: false,\r\n    isDataLoaded: false,\r\n    isDataError: false\r\n  }\r\n};\r\n\r\nconst todoAppReducer = (state = initialStoreState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        dataStatus: {\r\n          isDataLoaded: true,\r\n          isDataLoading: false,\r\n          isDataError: false\r\n        }\r\n      };\r\n    case FETCH_DATA_START:\r\n      return {\r\n        ...state,\r\n        dataStatus: {\r\n          isDataLoaded: false,\r\n          isDataLoading: true,\r\n          isDataError: false\r\n        }\r\n      };\r\n    case FETCH_DATA_FAILURE:\r\n      return {\r\n        ...state,\r\n        dataStatus: {\r\n          isDataLoaded: false,\r\n          isDataLoading: false,\r\n          isDataError: true\r\n        }\r\n      };\r\n    case ADD_TASKS:\r\n      return {\r\n        ...state,\r\n        isMaxNumberOfTasks:\r\n          state.todos.length + action.payload.length >= MAX_NUMBER_OF_TASKS,\r\n        todos: [...action.payload, ...state.todos]\r\n      };\r\n    case DELETE_TASK:\r\n      return {\r\n        ...state,\r\n        ...state.todos.splice(action.payload, 1),\r\n        todos: [...state.todos],\r\n        isMaxNumberOfTasks: false\r\n      };\r\n    case CHANGE_TASK_TO_COMPLETED:\r\n      return {\r\n        ...state,\r\n        ...(state.todos[action.payload].completed = true),\r\n        todos: [...state.todos]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const loadedDataActionCreator = () => {\r\n  return {\r\n    type: FETCH_DATA_SUCCESS\r\n  };\r\n};\r\n\r\nexport const loadingDataActionCreator = () => {\r\n  return {\r\n    type: FETCH_DATA_START\r\n  };\r\n};\r\n\r\nexport const errorDataLoadingActionCreator = () => {\r\n  return {\r\n    type: FETCH_DATA_FAILURE\r\n  };\r\n};\r\n\r\nexport const addTaskActionCreator = tasks => {\r\n  return {\r\n    type: ADD_TASKS,\r\n    payload: tasks\r\n  };\r\n};\r\n\r\nexport const deleteTaskActionCreator = index => {\r\n  return {\r\n    type: DELETE_TASK,\r\n    payload: index\r\n  };\r\n};\r\n\r\nexport const changeTaskStatusDone = index => {\r\n  return {\r\n    type: CHANGE_TASK_TO_COMPLETED,\r\n    payload: index\r\n  };\r\n};\r\n\r\nconst middlewareEnhancer = applyMiddleware();\r\n\r\nexport const store = createStore(\r\n  todoAppReducer,\r\n  initialStoreState,\r\n  composeWithDevTools(middlewareEnhancer)\r\n);\r\n","import styled from \"styled-components\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n*{\r\nbox-sizing: border-box;\r\nfont-family: Arial, Helvetica, sans-serif;\r\n}`;\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 2em;\r\n  color: #26309e;\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const Info = styled.p`\r\n  font-size: 1.5em;\r\n  color: #26309e;\r\n  text-align: center;\r\n  @media (max-width: 500px) {\r\n    width: 90vw;\r\n  }\r\n`;\r\nexport const InfoMax = styled(Info)`\r\n  color: #c91a1a;\r\n  font-weight: 700;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  font-size: 1.5em;\r\n  color: #26309e;\r\n  height: auto;\r\n  width: 30vw;\r\n  margin: 1em;\r\n  padding: 0.5em;\r\n  border-radius: 0.5em;\r\n  border: solid 2px #26309e;\r\n  @media (max-width: 500px) {\r\n    width: 90vw;\r\n  }\r\n`;\r\n\r\nexport const InputSubmit = styled(Input)`\r\n  width: 150px;\r\n  background-color: #fff;\r\n  border: solid 2px #26309e;\r\n  transition: background-color 0.3s ease-in-out;\r\n  &:hover {\r\n    background-color: #d1d3f0;\r\n  }\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n\r\nexport const ListElement = styled.li`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-bottom: 1.5em;\r\n`;\r\n\r\nexport const ListElementText = styled.p`\r\n  background-color: #e4e5f2;\r\n  border-radius: 0.5em;\r\n  font-size: 1.5em;\r\n  color: #26309e;\r\n  height: auto;\r\n  width: 30vw;\r\n  padding: 1em 2em;\r\n  margin: 0.5em 0;\r\n  @media (max-width: 500px) {\r\n    width: 90vw;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  font-size: 1.2em;\r\n  height: auto;\r\n  width: auto;\r\n  padding: 0.5em 1em;\r\n  background-color: #fff;\r\n  border-radius: 0.5em;\r\n  transition: background-color 0.3s ease-in-out;\r\n`;\r\n\r\nexport const DoneButton = styled(Button)`\r\n  color: #097509;\r\n  border: solid 1px #097509;\r\n\r\n  &:hover {\r\n    background-color: #c5ebc5;\r\n  }\r\n`;\r\n\r\nexport const DeleteButton = styled(Button)`\r\n  color: #c21021;\r\n  border: solid 1px #c21021;\r\n  &:hover {\r\n    background-color: #f7cbcf;\r\n  }\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  addTaskActionCreator,\r\n  deleteTaskActionCreator,\r\n  changeTaskStatusDone,\r\n  loadedDataActionCreator,\r\n  loadingDataActionCreator,\r\n  errorDataLoadingActionCreator\r\n} from \"./store\";\r\n\r\nimport * as Styled from \"./Styles\";\r\nimport { MAX_NUMBER_OF_TASKS } from \"./index\";\r\n\r\nconst limitAndMapTask = input =>\r\n  input\r\n    .filter((_, index) => index <= MAX_NUMBER_OF_TASKS - 1)\r\n    .map(task => {\r\n      return {\r\n        id: task.id,\r\n        title: task.title,\r\n        completed: task.completed\r\n      };\r\n    });\r\n\r\nfunction App() {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const taskList = useSelector(state => state.todos);\r\n  const isMax = useSelector(state => state);\r\n  const dataStatus = useSelector(state => state.dataStatus);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!dataStatus.isDataLoaded && !dataStatus.isDataLoading) {\r\n      dispatch(loadingDataActionCreator(true));\r\n      fetch(\"https://jsonplaceholder.typicode.com/todos\")\r\n        .then(result => result.json())\r\n        .then(result => {\r\n          dispatch(addTaskActionCreator(limitAndMapTask(result)));\r\n          dispatch(loadedDataActionCreator());\r\n        })\r\n        .catch(() => {\r\n          dispatch(errorDataLoadingActionCreator());\r\n        });\r\n    }\r\n  }, [dispatch, dataStatus.isDataLoaded]);\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (isMax.isMaxNumberOfTasks) {\r\n      alert(\r\n        \"Sorry, you can add 10 tasks maximum. To add a new task delete completed one.\"\r\n      );\r\n    }\r\n    if (inputValue === \"\") {\r\n      alert(\"Task can't be empty\");\r\n    } else {\r\n      dispatch(addTaskActionCreator([{ title: inputValue, completed: false }]));\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  const handleDelete = index => {\r\n    dispatch(deleteTaskActionCreator(index));\r\n  };\r\n\r\n  const handleStatusDone = index => {\r\n    dispatch(changeTaskStatusDone(index));\r\n  };\r\n\r\n  const isAddingTasksPossible = () => {\r\n    if (isMax.isMaxNumberOfTasks) {\r\n      return (\r\n        <>\r\n          <Styled.InfoMax>\r\n            Sorry, you can add 10 tasks maximum. To add a new task delete\r\n            completed one.\r\n          </Styled.InfoMax>\r\n          <Styled.Form onSubmit={handleSubmit}>\r\n            <Styled.Input\r\n              type=\"text\"\r\n              value={inputValue}\r\n              disabled=\"disabled\"\r\n              onChange={event => setInputValue(event.target.value)}\r\n            />\r\n          </Styled.Form>\r\n        </>\r\n      );\r\n    }\r\n    return (\r\n      <>\r\n        <Styled.Info>To add a task to list start typing.</Styled.Info>\r\n        <Styled.Form onSubmit={handleSubmit}>\r\n          <Styled.Input\r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={event => setInputValue(event.target.value)}\r\n          />\r\n          <Styled.InputSubmit type=\"submit\" value=\"Add task\" />\r\n        </Styled.Form>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const dataStatusInfo = () => {\r\n    if (dataStatus.isDataError) {\r\n      return <h3>Sorry, something went wrong... </h3>;\r\n    } else if (dataStatus.isDataLoading) {\r\n      return <h3>Loading...</h3>;\r\n    }\r\n    return taskList.map((taskData, index) => (\r\n      <Styled.ListElement key={index}>\r\n        <Styled.ListElementText>{taskData.title}</Styled.ListElementText>\r\n        {taskData.completed === false ? (\r\n          <Styled.DoneButton onClick={() => handleStatusDone(index)}>\r\n            Done\r\n          </Styled.DoneButton>\r\n        ) : (\r\n          <Styled.DeleteButton onClick={() => handleDelete(index)}>\r\n            Delete task\r\n          </Styled.DeleteButton>\r\n        )}\r\n      </Styled.ListElement>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <Styled.Container>\r\n      <Styled.GlobalStyles />\r\n      <Styled.Title>To do app</Styled.Title>\r\n      {isAddingTasksPossible()}\r\n      <Styled.List>{dataStatusInfo()}</Styled.List>\r\n    </Styled.Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./store\";\r\nimport App from \"./App\";\r\nexport const MAX_NUMBER_OF_TASKS = 10;\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}